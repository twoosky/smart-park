{"ast":null,"code":"var _jsxFileName = \"/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/NodeMap.tsx\";\nimport React, { Component } from 'react';\nimport './NodeMap.css';\nimport { NODE_URL } from '../defineUrl'; // 참고 : https://apis.map.kakao.com/web/sample/multipleMarkerEvent/\n\nimport MapNodeTable from './Table/MapNodeTable';\n\nclass NodeMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nodeList: [],\n      map: {},\n      left: 126.93120847993194,\n      right: 126.9814068917757,\n      up: 37.504736714448086,\n      down: 37.48669801512536\n    };\n\n    this.componentDidMount = () => {\n      var mapContainer = document.getElementById('node_map'); // 지도를 표시할 div\n\n      var mapOption = {\n        center: new window.kakao.maps.LatLng(37.49575158172499, 126.95633291769067),\n        // 지도의 중심좌표\n        level: 5 // 지도의 확대 레벨\n\n      }; // 지도를 생성합니다\n\n      var map = new window.kakao.maps.Map(mapContainer, mapOption);\n      this.setState({\n        map: map\n      });\n      this.getnodeList(this.state.left, this.state.right, this.state.up, this.state.down); // 드래그가 끝날 때 or 확대 수준이 변경되면\n\n      window.kakao.maps.event.addListener(map, 'idle', () => {\n        // 지도의 현재 영역을 얻어옵니다\n        var bounds = map.getBounds(); // 영역의 남서쪽 좌표를 얻어옵니다\n\n        var swLatLng = bounds.getSouthWest(); // 영역의 북동쪽 좌표를 얻어옵니다\n\n        var neLatLng = bounds.getNorthEast();\n        this.setState({\n          left: swLatLng.getLng(),\n          // left\n          right: neLatLng.getLng(),\n          // right\n          up: neLatLng.getLat(),\n          // up\n          down: swLatLng.getLat() // down\n\n        });\n        this.getnodeList(swLatLng.getLng(), // left\n        neLatLng.getLng(), // right\n        neLatLng.getLat(), // up\n        swLatLng.getLat() // down\n        );\n      });\n    };\n  }\n\n  // Get node list from backend\n  getnodeList(left, right, up, down) {\n    var url = NODE_URL + '?left=' + left + '&right=' + right + '&up=' + up + '&down=' + down;\n    fetch(url).then(res => res.json()).then(data => this.setState({\n      nodeList: data\n    })).catch(error => console.error('Error:', error));\n  } // Make Marker\n\n\n  displayMarker(position, map) {\n    // 마커를 생성합니다\n\n    /*var marker = new window.kakao.maps.Marker({\n    \tmap: map, // 마커를 표시할 지도\n    \tposition: position.latlng, // 마커의 위치\n    });*/\n    if (position.kind == 'streetlemp') var marker = this.addMarker(position, map, 0);else if (position.kind == 'trashcan') var marker = this.addMarker(position, map, 1); // 마커에 표시할 custom overlay를 생성합니다\n\n    var customOverlay = new window.kakao.maps.CustomOverlay({\n      position: marker.getPosition()\n    });\n    var content = document.createElement('div');\n    var title = document.createElement('div');\n    title.innerHTML = position.title;\n    title.className = 'title';\n    var closeBtn = document.createElement('button');\n\n    closeBtn.onclick = function () {\n      customOverlay.setMap(null);\n    };\n\n    closeBtn.className = 'close';\n    closeBtn.type = 'button';\n    title.appendChild(closeBtn);\n    var body = document.createElement('div');\n\n    for (var i = 0; i < 3; i++) {\n      var bodyElem = document.createElement('div');\n      bodyElem.appendChild(document.createTextNode(position.content[i]));\n      body.insertAdjacentElement('beforeend', bodyElem);\n    }\n\n    body.className = 'body';\n    var info = document.createElement('div');\n    info.className = 'info';\n    info.insertAdjacentElement('afterbegin', title);\n    var wrap = document.createElement('div');\n    wrap.className = 'wrap';\n    wrap.insertAdjacentElement('afterbegin', info);\n    title.insertAdjacentElement('afterend', body);\n    content.insertAdjacentElement('afterbegin', wrap);\n    customOverlay.setContent(content);\n    window.kakao.maps.event.addListener(marker, 'click', function () {\n      customOverlay.setMap(map);\n    });\n  } // order는 노드의 종류\n\n\n  addMarker(position, map, order) {\n    if (order == 0) {\n      var marker = new window.kakao.maps.Marker({\n        map: map,\n        // 마커를 표시할 지도\n        position: position.latlng // 마커의 위치\n\n      });\n      return marker;\n    }\n\n    var imageSrc = 'https://user-images.githubusercontent.com/50009240/111451567-e857c180-8754-11eb-9299-0ea55e430b17.png',\n        //var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\n    imageSize = new window.kakao.maps.Size(40, 45),\n        // 마커 이미지의 크기\n\n    /*imgOptions =  {\n    \tspriteSize : new window.kakao.maps.Size(686, 759), // 스프라이트 이미지의 크기\n    \t//spriteSize : new window.kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\n    \tspriteOrigin : new window.kakao.maps.Point(0, 0), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n    \t//spriteOrigin : new window.kakao.maps.Point(46, (order*36)), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n    \toffset: new window.kakao.maps.Point(0, 0) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n    },*/\n    markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize),\n        //markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n    marker = new window.kakao.maps.Marker({\n      map: map,\n      position: position.latlng,\n      // 마커의 위치\n      image: markerImage\n    }); // marker.setMap(map); // 지도 위에 마커를 표출합니다\n\n    return marker;\n  }\n\n  render() {\n    var positions = this.state.nodeList.map(node => {\n      return {\n        title: node.name,\n        kind: node.name.split('-')[0],\n        content: ['sink : ' + node.sink_id, 'id : ' + node.id, 'sensor : ' + node.sensors.map(sensor => sensor.name)],\n        latlng: new window.kakao.maps.LatLng(node.lat, node.lng)\n      };\n    });\n\n    for (var i = 0; i < positions.length; i++) {\n      this.displayMarker(positions[i], this.state.map);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"node_map\",\n      style: {\n        width: '100%',\n        height: '500px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(MapNodeTable, {\n      nodeState: this.props.nodeState,\n      nodeList: this.state.nodeList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default NodeMap;","map":{"version":3,"sources":["/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/NodeMap.tsx"],"names":["React","Component","NODE_URL","MapNodeTable","NodeMap","state","nodeList","map","left","right","up","down","componentDidMount","mapContainer","document","getElementById","mapOption","center","window","kakao","maps","LatLng","level","Map","setState","getnodeList","event","addListener","bounds","getBounds","swLatLng","getSouthWest","neLatLng","getNorthEast","getLng","getLat","url","fetch","then","res","json","data","catch","error","console","displayMarker","position","kind","marker","addMarker","customOverlay","CustomOverlay","getPosition","content","createElement","title","innerHTML","className","closeBtn","onclick","setMap","type","appendChild","body","i","bodyElem","createTextNode","insertAdjacentElement","info","wrap","setContent","order","Marker","latlng","imageSrc","imageSize","Size","markerImage","MarkerImage","image","render","positions","node","name","split","sink_id","id","sensors","sensor","lat","lng","length","width","height","props","nodeState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './NodeMap.css';\nimport { NODE_URL } from '../defineUrl';\n\n// 참고 : https://apis.map.kakao.com/web/sample/multipleMarkerEvent/\n\nimport {\n\tnodeListElem,\n\tsensorListElem,\n\tnodeHealthCheckElem,\n} from '../ElemInterface/ElementsInterface';\nimport MapNodeTable from './Table/MapNodeTable';\ndeclare global {\n\tinterface Window {\n\t\tkakao: any;\n\t}\n}\n\ninterface NodeMapProps {\n\tnodeState: Array<nodeHealthCheckElem>;\n}\n\ninterface NodeMapState {\n\tnodeList: Array<nodeListElem>;\n\tmap: any;\n\tleft: number;\n\tright: number;\n\tup: number;\n\tdown: number;\n}\n\nclass NodeMap extends Component<NodeMapProps, NodeMapState> {\n\tstate: NodeMapState = {\n\t\tnodeList: [],\n\t\tmap: {},\n\t\tleft: 126.93120847993194,\n\t\tright: 126.9814068917757,\n\t\tup: 37.504736714448086,\n\t\tdown: 37.48669801512536,\n\t};\n\tcomponentDidMount = () => {\n\t\tvar mapContainer = document.getElementById('node_map'); // 지도를 표시할 div\n\t\tvar mapOption = {\n\t\t\tcenter: new window.kakao.maps.LatLng(\n\t\t\t\t37.49575158172499,\n\t\t\t\t126.95633291769067\n\t\t\t), // 지도의 중심좌표\n\t\t\tlevel: 5, // 지도의 확대 레벨\n\t\t};\n\n\t\t// 지도를 생성합니다\n\t\tvar map = new window.kakao.maps.Map(mapContainer, mapOption);\n\t\tthis.setState({ map: map });\n\n\t\tthis.getnodeList(\n\t\t\tthis.state.left,\n\t\t\tthis.state.right,\n\t\t\tthis.state.up,\n\t\t\tthis.state.down,\n\t\t);\n\n\t\t// 드래그가 끝날 때 or 확대 수준이 변경되면\n\t\twindow.kakao.maps.event.addListener(map, 'idle', () => {\n\t\t\t// 지도의 현재 영역을 얻어옵니다\n\t\t\tvar bounds = map.getBounds();\n\n\t\t\t// 영역의 남서쪽 좌표를 얻어옵니다\n\t\t\tvar swLatLng = bounds.getSouthWest();\n\n\t\t\t// 영역의 북동쪽 좌표를 얻어옵니다\n\t\t\tvar neLatLng = bounds.getNorthEast();\n\n\t\t\tthis.setState({\n\t\t\t\tleft: swLatLng.getLng(), // left\n\t\t\t\tright: neLatLng.getLng(), // right\n\t\t\t\tup: neLatLng.getLat(), // up\n\t\t\t\tdown: swLatLng.getLat(), // down\n\t\t\t});\n\n\t\t\tthis.getnodeList(\n\t\t\t\tswLatLng.getLng(), // left\n\t\t\t\tneLatLng.getLng(), // right\n\t\t\t\tneLatLng.getLat(), // up\n\t\t\t\tswLatLng.getLat() // down\n\t\t\t);\n\t\t});\n\t};\n\t// Get node list from backend\n\tgetnodeList(left: number, right: number, up: number, down: number) {\n\t\tvar url =\n\t\t\tNODE_URL +\n\t\t\t'?left=' +\n\t\t\tleft +\n\t\t\t'&right=' +\n\t\t\tright +\n\t\t\t'&up=' +\n\t\t\tup +\n\t\t\t'&down=' +\n\t\t\tdown;\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => this.setState({ nodeList: data }))\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\t// Make Marker\n\tdisplayMarker(position: any, map: any) {\n\t\t// 마커를 생성합니다\n\t\t/*var marker = new window.kakao.maps.Marker({\n\t\t\tmap: map, // 마커를 표시할 지도\n\t\t\tposition: position.latlng, // 마커의 위치\n\t\t});*/\n\t\tif (position.kind == 'streetlemp') var marker = this.addMarker(position, map, 0);\n\t\telse if (position.kind == 'trashcan') var marker = this.addMarker(position, map, 1);\n\n\t\t// 마커에 표시할 custom overlay를 생성합니다\n\t\tvar customOverlay = new window.kakao.maps.CustomOverlay({\n\t\t\tposition: marker.getPosition(),\n\t\t});\n\n\t\tvar content = document.createElement('div');\n\n\t\tvar title = document.createElement('div');\n\t\ttitle.innerHTML = position.title;\n\t\ttitle.className = 'title';\n\n\t\tvar closeBtn = document.createElement('button');\n\n\t\tcloseBtn.onclick = function () {\n\t\t\tcustomOverlay.setMap(null);\n\t\t};\n\t\tcloseBtn.className = 'close';\n\t\tcloseBtn.type = 'button';\n\t\ttitle.appendChild(closeBtn);\n\n\t\tvar body = document.createElement('div');\n\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar bodyElem = document.createElement('div');\n\t\t\tbodyElem.appendChild(document.createTextNode(position.content[i]));\n\t\t\tbody.insertAdjacentElement('beforeend', bodyElem);\n\t\t}\n\n\t\tbody.className = 'body';\n\n\t\tvar info = document.createElement('div');\n\t\tinfo.className = 'info';\n\n\t\tinfo.insertAdjacentElement('afterbegin', title);\n\n\t\tvar wrap = document.createElement('div');\n\t\twrap.className = 'wrap';\n\t\twrap.insertAdjacentElement('afterbegin', info);\n\t\ttitle.insertAdjacentElement('afterend', body);\n\t\tcontent.insertAdjacentElement('afterbegin', wrap);\n\n\t\tcustomOverlay.setContent(content);\n\n\t\twindow.kakao.maps.event.addListener(marker, 'click', function () {\n\t\t\tcustomOverlay.setMap(map);\n\t\t});\n\t}\n\n\t// order는 노드의 종류\n\taddMarker(position: any, map: any, order: number) {\n\t\tif(order == 0) {\n\t\t\tvar marker = new window.kakao.maps.Marker({\n\t\t\t\tmap: map, // 마커를 표시할 지도\n\t\t\t\tposition: position.latlng, // 마커의 위치\n\t\t\t});\n\t\t\treturn marker;\n\t\t} \n\t\tvar imageSrc = 'https://user-images.githubusercontent.com/50009240/111451567-e857c180-8754-11eb-9299-0ea55e430b17.png',\n\t\t//var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\n\t\t\timageSize = new window.kakao.maps.Size(40 , 45),  // 마커 이미지의 크기\n\t\t\t/*imgOptions =  {\n\t\t\t\tspriteSize : new window.kakao.maps.Size(686, 759), // 스프라이트 이미지의 크기\n\t\t\t\t//spriteSize : new window.kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\n\t\t\t\tspriteOrigin : new window.kakao.maps.Point(0, 0), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n\t\t\t\t//spriteOrigin : new window.kakao.maps.Point(46, (order*36)), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n\t\t\t\toffset: new window.kakao.maps.Point(0, 0) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\t\t\t},*/\n\t\t\tmarkerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize),\n\t\t\t//markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n\t\t\t\tmarker = new window.kakao.maps.Marker({\n\t\t\t\tmap: map,\n\t\t\t\tposition: position.latlng, // 마커의 위치\n\t\t\t\timage: markerImage \n\t\t\t});\n\n\t\t// marker.setMap(map); // 지도 위에 마커를 표출합니다\n\t\n\t\treturn marker;\n\t}\n\n\trender() {\n\t\tvar positions = this.state.nodeList.map((node: nodeListElem) => {\n\t\t\treturn {\n\t\t\t\ttitle: node.name,\n\t\t\t\tkind: node.name.split('-')[0],\n\t\t\t\tcontent: [\n\t\t\t\t\t'sink : ' + node.sink_id,\n\t\t\t\t\t'id : ' + node.id,\n\t\t\t\t\t'sensor : ' +\n\t\t\t\t\t\tnode.sensors.map((sensor: sensorListElem) => sensor.name),\n\t\t\t\t],\n\t\t\t\tlatlng: new window.kakao.maps.LatLng(node.lat, node.lng),\n\t\t\t};\n\t\t});\n\n\t\tfor (var i = 0; i < positions.length; i++) {\n\t\t\tthis.displayMarker(positions[i], this.state.map);\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<div id=\"node_map\" style={{ width: '100%', height: '500px' }}></div>\n\t\t\t\t\t<MapNodeTable\n\t\t\t\t\t\tnodeState={this.props.nodeState}\n\t\t\t\t\t\tnodeList={this.state.nodeList}\n\t\t\t\t\t></MapNodeTable>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NodeMap;\n"]},"metadata":{},"sourceType":"module"}