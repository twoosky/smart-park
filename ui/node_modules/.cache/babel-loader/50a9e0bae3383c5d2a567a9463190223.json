{"ast":null,"code":"var _jsxFileName = \"/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/Table/MapNodeTable.tsx\";\nimport React, { Component } from 'react';\nimport { NODE_URL } from '../../defineUrl';\nvar HealthColor;\n\n(function (HealthColor) {\n  HealthColor[HealthColor[\"red\"] = 0] = \"red\";\n  HealthColor[HealthColor[\"#FACC2E\"] = 1] = \"#FACC2E\";\n  HealthColor[HealthColor[\"lime\"] = 2] = \"lime\";\n})(HealthColor || (HealthColor = {}));\n\n/*\nMapNodeTable\n- Show up node list.\n*/\nclass MapNodeTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRemoveClick = node_id => () => {\n      var url = NODE_URL + '/' + node_id;\n      fetch(url, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error('Error:', error)).then(() => window.location.reload(false));\n    };\n\n    this.findNodeState = id => {\n      for (let prop in this.props.nodeState) {\n        if (this.props.nodeState[prop].nid === id) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              color: HealthColor[this.props.nodeState[prop].state]\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 6\n            }\n          }, \"\\u25CF\");\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 10\n        }\n      }, \"\\u25CF\");\n    };\n\n    this.findNodeBattery = id => {\n      for (let prop in this.props.nodeState) {\n        if (this.props.nodeState[prop].nid === id) {\n          var battery = this.props.nodeState[prop].battery;\n          if (battery === 0) return /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              color: 'gray'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }\n          }, \"External power\");\n          if (battery === 255) return /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              color: 'gray'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }\n          }, \"Not measurable\"); // return <td style={{color: 'gray'}}>{battery}</td>\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          color: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 10\n        }\n      }, \"200\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 8\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    }, \"name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }\n    }, \"sensors\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }\n    }, \"health\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }\n    }, \"battery\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }, this.props.nodeList.map((node, idx) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, idx), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, node.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, node.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, node.sensors.map(sensor => sensor.name + ', ')), this.findNodeState(node.id), this.findNodeBattery(node.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-default btn-sm\",\n      type: \"button\",\n      id: \"button-delete\",\n      onClick: this.handleRemoveClick(node.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 16 16\",\n      className: \"bi bi-trash-fill\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }\n    })))))))));\n  }\n\n}\n\nexport default MapNodeTable;","map":{"version":3,"sources":["/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/Table/MapNodeTable.tsx"],"names":["React","Component","NODE_URL","HealthColor","MapNodeTable","handleRemoveClick","node_id","url","fetch","method","headers","then","res","json","catch","error","console","window","location","reload","findNodeState","id","prop","props","nodeState","nid","color","state","findNodeBattery","battery","render","nodeList","map","node","idx","name","sensors","sensor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n\tnodeListElem,\n\tnodeHealthCheckElem,\n} from '../../ElemInterface/ElementsInterface';\nimport { NODE_URL } from '../../defineUrl';\n\nenum HealthColor {\n\t'red',\n\t'#FACC2E',\n\t'lime',\n}\n\ninterface MapNodeTableProps {\n\tnodeList: Array<nodeListElem>;\n\tnodeState: Array<nodeHealthCheckElem>;\n}\n\n/*\nMapNodeTable\n- Show up node list.\n*/\nclass MapNodeTable extends Component<MapNodeTableProps, {}> {\n\t// Handle click event of the Remove button\n\thandleRemoveClick = (node_id: number) => () => {\n\t\tvar url = NODE_URL + '/' + node_id;\n\n\t\tfetch(url, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.catch((error) => console.error('Error:', error))\n\t\t\t.then(() => window.location.reload(false));\n\t};\n\n\t// Find node state(health) and represent as colors (red - yellow - green, gray)\n\tfindNodeState = (id: number) => {\n\t\tfor (let prop in this.props.nodeState) {\n\t\t\tif (this.props.nodeState[prop].nid === id) {\n\t\t\t\treturn (\n\t\t\t\t\t<td\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: HealthColor[this.props.nodeState[prop].state],\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t●\n\t\t\t\t\t</td>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn <td style={{ color: 'gray' }}>●</td>;\n\t};\n\n\tfindNodeBattery = (id: number) => {\n\t\tfor (let prop in this.props.nodeState) {\n\t\t\tif (this.props.nodeState[prop].nid === id) {\n\t\t\t\tvar battery = this.props.nodeState[prop].battery;\n\t\t\t\tif ( battery === 0 ) \n\t\t\t\t\treturn <td style={{color: 'gray'}}>External power</td>\n\t\t\t\tif ( battery === 255 )\n\t\t\t\t\treturn <td style={{color: 'gray'}}>Not measurable</td>\n\t\t\t\t// return <td style={{color: 'gray'}}>{battery}</td>\n\t\t\t}\n\t\t}\n\t\treturn <td style={{color: 'gray'}}>200</td>\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th scope=\"col\">#</th>\n\t\t\t\t\t\t\t<th scope=\"col\">name</th>\n\t\t\t\t\t\t\t<th scope=\"col\">id</th>\n\t\t\t\t\t\t\t<th scope=\"col\">sensors</th>\n\t\t\t\t\t\t\t<th scope=\"col\">health</th>\n\t\t\t\t\t\t\t<th scope=\"col\">battery</th>\n\t\t\t\t\t\t\t<th scope=\"col\"></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{this.props.nodeList.map((node: nodeListElem, idx: number) => (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"row\">{idx}</th>\n\t\t\t\t\t\t\t\t<td>{node.name}</td>\n\t\t\t\t\t\t\t\t<td>{node.id}</td>\n\t\t\t\t\t\t\t\t<td>{node.sensors.map((sensor: any) => sensor.name + ', ')}</td>\n\t\t\t\t\t\t\t\t{this.findNodeState(node.id)}\n\t\t\t\t\t\t\t\t{this.findNodeBattery(node.id)}\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-default btn-sm\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tid=\"button-delete\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleRemoveClick(node.id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"bi bi-trash-fill\"\n\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\td=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default MapNodeTable;"]},"metadata":{},"sourceType":"module"}