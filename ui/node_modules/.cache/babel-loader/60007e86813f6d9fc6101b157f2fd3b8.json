{"ast":null,"code":"var _jsxFileName = \"/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/Register/RegisterNode.tsx\";\n\n/*\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport {\n\tsensorListElem,\n\tsensorOptionsElem,\n\tsinkListElem,\n\tsinkOptionsElem,\n\tlocationElem,\n} from '../../ElemInterface/ElementsInterface';\nimport { NODE_URL, SINK_URL, SENSOR_URL } from '../../defineUrl';\nimport LarLngPicker from '../LatLngPicker';\n// react-select : https://github.com/JedWatson/react-select\n\ninterface RegisterNodeState {\n\tsensorList: Array<sensorListElem>;\n\tsinkList: Array<sinkListElem>;\n\n\tnode_name: string;\n\tkind: string;\n\tlocation: locationElem;\n\tsink_id: number;\n\tsensors: Array<sensorOptionsElem>;\n\tnameValid: boolean;\n\tkindValid: boolean;\n\tsensorValid: boolean;\n\tsinkValid: boolean;\n}\n\ninterface nodeOptionsElem {\n\tlabel: string;\n\tvalue: string;\n}\n\n/*\nRegisterNode\n- Show modal to register node\n\nclass RegisterNode extends Component<{}, RegisterNodeState> {\n\tstate: RegisterNodeState = {\n\t\tsensorList: [],\n\t\tsinkList: [],\n\n\t\tnode_name: '',\n\t\tkind: '',\n\t\tlocation: {\n\t\t\tlng: 0,\n\t\t\tlat: 0,\n\t\t},\n\t\tsink_id: 0,\n\t\tsensors: [],\n\n\t\tnameValid: false,\n\t\tkindValid: false,\n\t\tsensorValid: false,\n\t\tsinkValid: false,\n\t};\n\tcomponentDidMount() {\n\t\tthis.getsensorList();\n\t\tthis.getsinkList();\n\t}\n\n\t// Get sensor list from backend\n\tgetsensorList() {\n\t\tvar url = SENSOR_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({ sensorList: data });\n\t\t\t})\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\t// Get sink list from backend\n\tgetsinkList() {\n\t\tvar url = SINK_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => this.setState({ sinkList: data }))\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\t// Handle node name change by typing\n\thandleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t// name valid check : user should enter node name\n\t\tif (e.target.value.length > 0) {\n\t\t\tthis.setState({\n\t\t\t\tnode_name: e.target.value,\n\t\t\t\tnameValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnode_name: e.target.value,\n\t\t\t\tnameValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleKindChange = (nodeKind: any) => {\n\t\tif (nodeKind !== null) {\n\t\t\tthis.setState({\n\t\t\t\tkind: nodeKind.value,\n\t\t\t\tkindValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tkind: nodeKind.value,\n\t\t\t\tkindValid: false,\n\t\t\t});\n\t\t}\n\n\t\tif (nodeKind === 'street')\n\t}\n\n\t// Handle LarLng change by pick lat, lng at map\n\thandleLarLngChange = (location: locationElem) => {\n\t\tthis.setState({\n\t\t\tlocation,\n\t\t});\n\t};\n\n\t// Handle selected sensor change by selecting sensors\n\thandleSensorsChange = (sensors: any) => {\n\t\t// sensor valid check : user should select more than a sensor\n\t\tif (sensors !== null || sensors !== []) {\n\t\t\tthis.setState({\n\t\t\t\tsensors,\n\t\t\t\tsensorValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsensors,\n\t\t\t\tsensorValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\t// Handle selected sink change by selecting sink\n\thandleSinkChange = (sink: any) => {\n\t\t// sink valid check : user should select sink\n\t\tif (sink !== null) {\n\t\t\tthis.setState({\n\t\t\t\tsink_id: sink.id,\n\t\t\t\tsinkValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsink_id: sink.id,\n\t\t\t\tsinkValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\t// Handle submit button click event\n\thandleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\te.preventDefault();\n\n\t\tvar url = NODE_URL;\n\t\tvar data = this.state;\n\t\tvar sensor_id = data.sensors.map((val: sensorOptionsElem) => {\n\t\t\treturn { id: val.id };\n\t\t});\n\t\tvar name = this.state.kind + '-' + this.state.node_name;\n\n\t\t// Valid check (unvalid -> alert)\n\t\tif (!this.state.nameValid) {\n\t\t\talert('Please enter node name.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.kindValid) {\n\t\t\talert('Please select more than a node kind.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.sensorValid) {\n\t\t\talert('Please select more than a sensor.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.sinkValid) {\n\t\t\talert('Please enter sink.');\n\t\t\treturn;\n\t\t}\n\n\t\t// Check whether user really want to submit\n\t\tvar submitValid: boolean;\n\t\tsubmitValid = window.confirm('Are you sure to register this node?');\n\t\tif (!submitValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(\n\t\t\tJSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\tlat: data.location.lat,\n\t\t\t\tlng: data.location.lng,\n\t\t\t\tsensors: sensor_id,\n\t\t\t})\n\t\t);\n\n\t\tfetch(url, {\n\t\t\tmethod: 'POST', // or 'PUT'\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\tlat: data.location.lat,\n\t\t\t\tlng: data.location.lng,\n\t\t\t\tsink_id: data.sink_id,\n\t\t\t\tsensors: sensor_id,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((response) => console.log('Success:', JSON.stringify(response)))\n\t\t\t.catch((error) => console.error('Error:', error))\n\t\t\t.then(() => window.location.reload(false)); // nodeList will change so reload for reflecting change\n\t};\n\n\trender() {\n\t\tlet sensorOptions: Array<sensorOptionsElem>;\n\t\tsensorOptions = this.state.sensorList.map((val: sensorListElem) => {\n\t\t\treturn {\n\t\t\t\tlabel: val.name,\n\t\t\t\tvalue: val.name,\n\t\t\t\tid: val.id,\n\t\t\t\tsensor_values: val.sensor_values,\n\t\t\t};\n\t\t});\n\t\tlet sinkOptions: Array<sinkOptionsElem>;\n\t\tsinkOptions = this.state.sinkList.map((val: sinkListElem) => {\n\t\t\treturn { label: val.name, value: val.name, id: val.id };\n\t\t});\n\n\t\tlet nodeOptions: Array<nodeOptionsElem> = [\n\t\t\t{ label: 'streetlemp', value: 'streetlemp'}, \n\t\t\t{ label: 'arbor', value: 'arbor' }, \n\t\t\t{ label: 'trashcan', value: 'trashcan' }, \n\t\t];\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"modal fade\"\n\t\t\t\t\tid=\"register-node-modal\"\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\taria-labelledby=\"register-node-modal\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"modal-dialog  modal-lg\" role=\"document\">\n\t\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<h4 className=\"modal-title\" id=\"register-node-modal\">\n\t\t\t\t\t\t\t\t\tRegister node\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">Ã—</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Node name</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"node_name\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.node_name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>location</label>\n\t\t\t\t\t\t\t\t\t\t<LarLngPicker\n\t\t\t\t\t\t\t\t\t\t\thandleLarLngChange={this.handleLarLngChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select Node</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\toptions={nodeOptions}\n\t\t\t\t\t\t\t\t\t\t\tname=\"action\"\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleKindChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select sensors</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"basic-multi-select\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"sensors\"\n\t\t\t\t\t\t\t\t\t\t\toptions={sensorOptions}\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.sensors}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSensorsChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select sink</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"basic-select\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"sink\"\n\t\t\t\t\t\t\t\t\t\t\toptions={sinkOptions}\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSinkChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success my-2 my-sm-0\" \n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: 'light' }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"reset\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RegisterNode;\n\n*/\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { NODE_URL, SINK_URL, SENSOR_URL } from '../../defineUrl';\nimport LarLngPicker from '../LatLngPicker'; // react-select : https://github.com/JedWatson/react-select\n\n/*\nRegisterNode\n- Show modal to register node\n*/\nclass RegisterNode extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sensorList: [],\n      sinkList: [],\n      node_name: '',\n      kind: '',\n      location: {\n        lng: 0,\n        lat: 0\n      },\n      sink_id: 0,\n      sensors: [],\n      streetlampsensors: [],\n      trashcansensors: [],\n      treesensors: [],\n      nameValid: false,\n      kindValid: false,\n      sensorValid: false,\n      sinkValid: false\n    };\n\n    this.handleNameChange = e => {\n      // name valid check : user should enter node name\n      if (e.target.value.length > 0) {\n        this.setState({\n          node_name: e.target.value,\n          nameValid: true\n        });\n      } else {\n        this.setState({\n          node_name: e.target.value,\n          nameValid: false\n        });\n      }\n\n      console.log('name' + this.state.node_name);\n    };\n\n    this.handleKindChange = nodeKind => {\n      let sensorOptions;\n      sensorOptions = this.state.sensorList.map(val => {\n        return {\n          label: val.name,\n          value: val.name,\n          id: val.id,\n          sensor_values: val.sensor_values\n        };\n      });\n      sensorOptions.map(val => {\n        let name = val.label.split('-')[0];\n\n        if (name === 'ultrafine dust' || name === 'fine dust' || name === 'temperature' || name === 'humidity' || name === 'infrared' || name === 'illuminance') {\n          this.setState({\n            streetlampsensors: [...this.state.streetlampsensors, val]\n          });\n        }\n\n        if (name === 'ultrasound') {\n          this.setState({\n            trashcansensors: [...this.state.trashcansensors, val]\n          });\n        }\n\n        if (name === 'soil moisture') {\n          this.setState({\n            treesensors: [...this.state.treesensors, val]\n          });\n        }\n      });\n      console.log('streelamp: ' + this.state.streetlampsensors[0]);\n      console.log('trashcan: ' + this.state.trashcansensors[0]);\n      console.log('tree: ' + this.state.treesensors[0]);\n      /*if (nodeKind !== null) {\n      \tthis.setState({\n      \t\tkind: nodeKind.value,\n      \t\tkindValid: true,\n      \t});\n      } else {\n      \tthis.setState({\n      \t\tkind: nodeKind.value,\n      \t\tkindValid: false,\n      \t});\n      }\n      console.log(this.state.kind);*/\n\n      if (nodeKind === 'streetlamp') {\n        this.setState({\n          sensors: this.state.streetlampsensors,\n          sensorValid: true\n        });\n        console.log('streetlamp');\n      }\n\n      if (nodeKind === 'trashcan') {\n        this.setState({\n          sensors: this.state.trashcansensors,\n          sensorValid: true\n        });\n      }\n\n      if (nodeKind === 'arbor') {\n        this.setState({\n          sensors: this.state.treesensors,\n          sensorValid: false\n        });\n      }\n\n      console.log('selectedSensorlist: ' + this.state.sensors[0]);\n    };\n\n    this.handleLarLngChange = location => {\n      this.setState({\n        location\n      });\n    };\n\n    this.handleSensorsChange = sensors => {\n      // sensor valid check : user should select more than a sensor\n      if (sensors !== null || sensors !== []) {\n        if (this.state.kind === 'streetlamp') {\n          this.setState({\n            sensors: this.state.streetlampsensors,\n            sensorValid: true\n          });\n        } else if (this.state.kind === 'trashcan') {\n          this.setState({\n            sensors: this.state.trashcansensors,\n            sensorValid: true\n          });\n        } else if (this.state.kind === 'arbor') {\n          this.setState({\n            sensors: this.state.treesensors,\n            sensorValid: false\n          });\n        }\n      }\n    };\n\n    this.handleSinkChange = sink => {\n      // sink valid check : user should select sink\n      if (sink !== null) {\n        this.setState({\n          sink_id: sink.id,\n          sinkValid: true\n        });\n      } else {\n        this.setState({\n          sink_id: sink.id,\n          sinkValid: false\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      var url = NODE_URL;\n      var data = this.state;\n      console.log(data.sensors[0]);\n      var sensor_id = data.sensors.map(val => {\n        return {\n          id: val.id\n        };\n      });\n      var name = this.state.kind + '-' + this.state.node_name; // Valid check (unvalid -> alert)\n\n      if (!this.state.nameValid) {\n        alert('Please enter node name.');\n        return;\n      }\n\n      if (!this.state.kindValid) {\n        alert('Please select more than a node kind.');\n        return;\n      }\n\n      if (!this.state.sensorValid) {\n        alert('Please select more than a sensor.');\n        return;\n      }\n\n      if (!this.state.sinkValid) {\n        alert('Please enter sink.');\n        return;\n      } // Check whether user really want to submit\n\n\n      var submitValid;\n      submitValid = window.confirm('Are you sure to register this node?');\n\n      if (!submitValid) {\n        return;\n      }\n\n      console.log(JSON.stringify({\n        name: name,\n        lat: data.location.lat,\n        lng: data.location.lng,\n        sensors: sensor_id\n      }));\n      fetch(url, {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify({\n          name: name,\n          lat: data.location.lat,\n          lng: data.location.lng,\n          sink_id: data.sink_id,\n          sensors: sensor_id\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(response => console.log('Success:', JSON.stringify(response))).catch(error => console.error('Error:', error)).then(() => window.location.reload(false)); // nodeList will change so reload for reflecting change\n    };\n  }\n\n  componentDidMount() {\n    this.getsensorList();\n    this.getsinkList(); //this.getsensorOption();\n  } // Get sensor list from backend\n\n\n  getsensorList() {\n    var url = SENSOR_URL;\n    fetch(url).then(res => res.json()).then(data => {\n      this.setState({\n        sensorList: data\n      });\n    }).catch(error => console.error('Error:', error));\n  } // Get sink list from backend\n\n\n  getsinkList() {\n    var url = SINK_URL;\n    fetch(url).then(res => res.json()).then(data => this.setState({\n      sinkList: data\n    })).catch(error => console.error('Error:', error));\n  }\n\n  getsensorOption() {\n    let sensorOptions;\n    sensorOptions = this.state.sensorList.map(val => {\n      return {\n        label: val.name,\n        value: val.name,\n        id: val.id,\n        sensor_values: val.sensor_values\n      };\n    });\n    sensorOptions.map(val => {\n      let name = val.label.split('-')[0];\n\n      if (name === 'ultrafine dust' || name === 'fine dust' || name === 'temperature' || name === 'humidity' || name === 'infrared' || name === 'illuminance') {\n        this.setState({\n          streetlampsensors: [...this.state.streetlampsensors, val]\n        });\n      }\n\n      if (name === 'ultrasound') {\n        this.setState({\n          trashcansensors: [...this.state.trashcansensors, val]\n        });\n      }\n\n      if (name === 'soil moisture') {\n        this.setState({\n          treesensors: [...this.state.treesensors, val]\n        });\n      }\n    });\n    console.log('streelamp: ' + this.state.streetlampsensors[0]);\n    console.log('trashcan: ' + this.state.trashcansensors[0]);\n    console.log('tree: ' + this.state.treesensors[0]);\n  } // Handle node name change by typing\n\n\n  render() {\n    let sensorOptions;\n    sensorOptions = this.state.sensorList.map(val => {\n      return {\n        label: val.name,\n        value: val.name,\n        id: val.id,\n        sensor_values: val.sensor_values\n      };\n    });\n    let sinkOptions;\n    sinkOptions = this.state.sinkList.map(val => {\n      return {\n        label: val.name,\n        value: val.name,\n        id: val.id\n      };\n    });\n    let nodeOptions = [{\n      label: 'streetlemp',\n      value: 'streetlemp'\n    }, {\n      label: 'arbor',\n      value: 'arbor'\n    }, {\n      label: 'trashcan',\n      value: 'trashcan'\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"register-node-modal\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"register-node-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog  modal-lg\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"modal-title\",\n      id: \"register-node-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }\n    }, \"Register node\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 10\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }\n    }, \"Node name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"node_name\",\n      placeholder: \"name\",\n      value: this.state.node_name,\n      onChange: this.handleNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }\n    }, \"location\"), /*#__PURE__*/React.createElement(LarLngPicker, {\n      handleLarLngChange: this.handleLarLngChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 11\n      }\n    }, \"Select Node\"), /*#__PURE__*/React.createElement(Select, {\n      options: nodeOptions,\n      name: \"action\",\n      classNamePrefix: \"select\",\n      onChange: this.handleKindChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }\n    }, \"Select sink\"), /*#__PURE__*/React.createElement(Select, {\n      className: \"basic-select\",\n      name: \"sink\",\n      options: sinkOptions,\n      classNamePrefix: \"select\",\n      onChange: this.handleSinkChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success my-2 my-sm-0\",\n      onClick: this.handleSubmit,\n      style: {\n        background: 'light'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 11\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      className: \"btn btn-default\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\n\nexport default RegisterNode;","map":{"version":3,"sources":["/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/Register/RegisterNode.tsx"],"names":["React","Component","Select","NODE_URL","SINK_URL","SENSOR_URL","LarLngPicker","RegisterNode","state","sensorList","sinkList","node_name","kind","location","lng","lat","sink_id","sensors","streetlampsensors","trashcansensors","treesensors","nameValid","kindValid","sensorValid","sinkValid","handleNameChange","e","target","value","length","setState","console","log","handleKindChange","nodeKind","sensorOptions","map","val","label","name","id","sensor_values","split","handleLarLngChange","handleSensorsChange","handleSinkChange","sink","handleSubmit","preventDefault","url","data","sensor_id","alert","submitValid","window","confirm","JSON","stringify","fetch","method","body","headers","then","res","json","response","catch","error","reload","componentDidMount","getsensorList","getsinkList","getsensorOption","render","sinkOptions","nodeOptions","background"],"mappings":"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","sourcesContent":["/*\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport {\n\tsensorListElem,\n\tsensorOptionsElem,\n\tsinkListElem,\n\tsinkOptionsElem,\n\tlocationElem,\n} from '../../ElemInterface/ElementsInterface';\nimport { NODE_URL, SINK_URL, SENSOR_URL } from '../../defineUrl';\nimport LarLngPicker from '../LatLngPicker';\n// react-select : https://github.com/JedWatson/react-select\n\ninterface RegisterNodeState {\n\tsensorList: Array<sensorListElem>;\n\tsinkList: Array<sinkListElem>;\n\n\tnode_name: string;\n\tkind: string;\n\tlocation: locationElem;\n\tsink_id: number;\n\tsensors: Array<sensorOptionsElem>;\n\tnameValid: boolean;\n\tkindValid: boolean;\n\tsensorValid: boolean;\n\tsinkValid: boolean;\n}\n\ninterface nodeOptionsElem {\n\tlabel: string;\n\tvalue: string;\n}\n\n/*\nRegisterNode\n- Show modal to register node\n\nclass RegisterNode extends Component<{}, RegisterNodeState> {\n\tstate: RegisterNodeState = {\n\t\tsensorList: [],\n\t\tsinkList: [],\n\n\t\tnode_name: '',\n\t\tkind: '',\n\t\tlocation: {\n\t\t\tlng: 0,\n\t\t\tlat: 0,\n\t\t},\n\t\tsink_id: 0,\n\t\tsensors: [],\n\n\t\tnameValid: false,\n\t\tkindValid: false,\n\t\tsensorValid: false,\n\t\tsinkValid: false,\n\t};\n\tcomponentDidMount() {\n\t\tthis.getsensorList();\n\t\tthis.getsinkList();\n\t}\n\n\t// Get sensor list from backend\n\tgetsensorList() {\n\t\tvar url = SENSOR_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({ sensorList: data });\n\t\t\t})\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\t// Get sink list from backend\n\tgetsinkList() {\n\t\tvar url = SINK_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => this.setState({ sinkList: data }))\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\t// Handle node name change by typing\n\thandleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t// name valid check : user should enter node name\n\t\tif (e.target.value.length > 0) {\n\t\t\tthis.setState({\n\t\t\t\tnode_name: e.target.value,\n\t\t\t\tnameValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnode_name: e.target.value,\n\t\t\t\tnameValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleKindChange = (nodeKind: any) => {\n\t\tif (nodeKind !== null) {\n\t\t\tthis.setState({\n\t\t\t\tkind: nodeKind.value,\n\t\t\t\tkindValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tkind: nodeKind.value,\n\t\t\t\tkindValid: false,\n\t\t\t});\n\t\t}\n\n\t\tif (nodeKind === 'street')\n\t}\n\n\t// Handle LarLng change by pick lat, lng at map\n\thandleLarLngChange = (location: locationElem) => {\n\t\tthis.setState({\n\t\t\tlocation,\n\t\t});\n\t};\n\n\t// Handle selected sensor change by selecting sensors\n\thandleSensorsChange = (sensors: any) => {\n\t\t// sensor valid check : user should select more than a sensor\n\t\tif (sensors !== null || sensors !== []) {\n\t\t\tthis.setState({\n\t\t\t\tsensors,\n\t\t\t\tsensorValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsensors,\n\t\t\t\tsensorValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\t// Handle selected sink change by selecting sink\n\thandleSinkChange = (sink: any) => {\n\t\t// sink valid check : user should select sink\n\t\tif (sink !== null) {\n\t\t\tthis.setState({\n\t\t\t\tsink_id: sink.id,\n\t\t\t\tsinkValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsink_id: sink.id,\n\t\t\t\tsinkValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\t// Handle submit button click event\n\thandleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\te.preventDefault();\n\n\t\tvar url = NODE_URL;\n\t\tvar data = this.state;\n\t\tvar sensor_id = data.sensors.map((val: sensorOptionsElem) => {\n\t\t\treturn { id: val.id };\n\t\t});\n\t\tvar name = this.state.kind + '-' + this.state.node_name;\n\n\t\t// Valid check (unvalid -> alert)\n\t\tif (!this.state.nameValid) {\n\t\t\talert('Please enter node name.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.kindValid) {\n\t\t\talert('Please select more than a node kind.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.sensorValid) {\n\t\t\talert('Please select more than a sensor.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.sinkValid) {\n\t\t\talert('Please enter sink.');\n\t\t\treturn;\n\t\t}\n\n\t\t// Check whether user really want to submit\n\t\tvar submitValid: boolean;\n\t\tsubmitValid = window.confirm('Are you sure to register this node?');\n\t\tif (!submitValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(\n\t\t\tJSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\tlat: data.location.lat,\n\t\t\t\tlng: data.location.lng,\n\t\t\t\tsensors: sensor_id,\n\t\t\t})\n\t\t);\n\n\t\tfetch(url, {\n\t\t\tmethod: 'POST', // or 'PUT'\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\tlat: data.location.lat,\n\t\t\t\tlng: data.location.lng,\n\t\t\t\tsink_id: data.sink_id,\n\t\t\t\tsensors: sensor_id,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((response) => console.log('Success:', JSON.stringify(response)))\n\t\t\t.catch((error) => console.error('Error:', error))\n\t\t\t.then(() => window.location.reload(false)); // nodeList will change so reload for reflecting change\n\t};\n\n\trender() {\n\t\tlet sensorOptions: Array<sensorOptionsElem>;\n\t\tsensorOptions = this.state.sensorList.map((val: sensorListElem) => {\n\t\t\treturn {\n\t\t\t\tlabel: val.name,\n\t\t\t\tvalue: val.name,\n\t\t\t\tid: val.id,\n\t\t\t\tsensor_values: val.sensor_values,\n\t\t\t};\n\t\t});\n\t\tlet sinkOptions: Array<sinkOptionsElem>;\n\t\tsinkOptions = this.state.sinkList.map((val: sinkListElem) => {\n\t\t\treturn { label: val.name, value: val.name, id: val.id };\n\t\t});\n\n\t\tlet nodeOptions: Array<nodeOptionsElem> = [\n\t\t\t{ label: 'streetlemp', value: 'streetlemp'}, \n\t\t\t{ label: 'arbor', value: 'arbor' }, \n\t\t\t{ label: 'trashcan', value: 'trashcan' }, \n\t\t];\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"modal fade\"\n\t\t\t\t\tid=\"register-node-modal\"\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\taria-labelledby=\"register-node-modal\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"modal-dialog  modal-lg\" role=\"document\">\n\t\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<h4 className=\"modal-title\" id=\"register-node-modal\">\n\t\t\t\t\t\t\t\t\tRegister node\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">Ã—</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Node name</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"node_name\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.node_name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>location</label>\n\t\t\t\t\t\t\t\t\t\t<LarLngPicker\n\t\t\t\t\t\t\t\t\t\t\thandleLarLngChange={this.handleLarLngChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select Node</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\toptions={nodeOptions}\n\t\t\t\t\t\t\t\t\t\t\tname=\"action\"\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleKindChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select sensors</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"basic-multi-select\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"sensors\"\n\t\t\t\t\t\t\t\t\t\t\toptions={sensorOptions}\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.sensors}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSensorsChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select sink</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"basic-select\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"sink\"\n\t\t\t\t\t\t\t\t\t\t\toptions={sinkOptions}\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSinkChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success my-2 my-sm-0\" \n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: 'light' }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"reset\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RegisterNode;\n\n*/\n\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport {\n\tsensorListElem,\n\tsensorOptionsElem,\n\tsinkListElem,\n\tsinkOptionsElem,\n\tlocationElem,\n} from '../../ElemInterface/ElementsInterface';\nimport { NODE_URL, SINK_URL, SENSOR_URL } from '../../defineUrl';\nimport LarLngPicker from '../LatLngPicker';\n// react-select : https://github.com/JedWatson/react-select\n\ninterface RegisterNodeState {\n\tsensorList: Array<sensorListElem>;\n\tsinkList: Array<sinkListElem>;\n\n\tnode_name: string;\n\tkind: string;\n\tlocation: locationElem;\n\tsink_id: number;\n\tsensors: Array<sensorOptionsElem>;\n\tstreetlampsensors: Array<sensorOptionsElem>;\n\ttrashcansensors: Array<sensorOptionsElem>;\n\ttreesensors: Array<sensorOptionsElem>;\n\tnameValid: boolean;\n\tkindValid: boolean;\n\tsensorValid: boolean;\n\tsinkValid: boolean;\n}\n\ninterface nodeOptionsElem {\n\tlabel: string;\n\tvalue: string;\n}\n\n/*\nRegisterNode\n- Show modal to register node\n*/\nclass RegisterNode extends Component<{}, RegisterNodeState> {\n\tstate: RegisterNodeState = {\n\t\tsensorList: [],\n\t\tsinkList: [],\n\n\t\tnode_name: '',\n\t\tkind: '',\n\t\tlocation: {\n\t\t\tlng: 0,\n\t\t\tlat: 0,\n\t\t},\n\t\tsink_id: 0,\n\t\tsensors: [],\n\t\tstreetlampsensors: [],\n\t\ttrashcansensors: [],\n\t\ttreesensors: [],\n\n\t\tnameValid: false,\n\t\tkindValid: false,\n\t\tsensorValid: false,\n\t\tsinkValid: false,\n\t};\n\tcomponentDidMount() {\n\t\tthis.getsensorList();\n\t\tthis.getsinkList();\n\t\t//this.getsensorOption();\n\t}\n\n\t// Get sensor list from backend\n\tgetsensorList() {\n\t\tvar url = SENSOR_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({ sensorList: data });\n\t\t\t})\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\t// Get sink list from backend\n\tgetsinkList() {\n\t\tvar url = SINK_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => this.setState({ sinkList: data }))\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\tgetsensorOption() {\n\t\tlet sensorOptions: Array<sensorOptionsElem>;\n\t\tsensorOptions = this.state.sensorList.map((val: sensorListElem) => {\n\t\t\treturn {\n\t\t\t\tlabel: val.name,\n\t\t\t\tvalue: val.name,\n\t\t\t\tid: val.id,\n\t\t\t\tsensor_values: val.sensor_values,\n\t\t\t};\n\t\t});\n\n\t\tsensorOptions.map((val: sensorOptionsElem) => {\n\t\t\tlet name = val.label.split('-')[0]\n\t\t\tif (name === 'ultrafine dust' || name === 'fine dust' || name === 'temperature' || name === 'humidity' || name === 'infrared' || name === 'illuminance' ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tstreetlampsensors: [...this.state.streetlampsensors, val],\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (name === 'ultrasound') {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttrashcansensors: [...this.state.trashcansensors, val],\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (name === 'soil moisture') {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttreesensors: [...this.state.treesensors, val],\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t\tconsole.log('streelamp: ' + this.state.streetlampsensors[0]);\n\t\tconsole.log('trashcan: ' + this.state.trashcansensors[0]);\n\t\tconsole.log('tree: ' + this.state.treesensors[0]);\n\t}\n\n\t// Handle node name change by typing\n\thandleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t// name valid check : user should enter node name\n\t\tif (e.target.value.length > 0) {\n\t\t\tthis.setState({\n\t\t\t\tnode_name: e.target.value,\n\t\t\t\tnameValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnode_name: e.target.value,\n\t\t\t\tnameValid: false,\n\t\t\t});\n\t\t}\n\t\tconsole.log('name' + this.state.node_name);\n\t};\n\n\thandleKindChange = (nodeKind: any) => {\n\t\tlet sensorOptions: Array<sensorOptionsElem>;\n\t\tsensorOptions = this.state.sensorList.map((val: sensorListElem) => {\n\t\t\treturn {\n\t\t\t\tlabel: val.name,\n\t\t\t\tvalue: val.name,\n\t\t\t\tid: val.id,\n\t\t\t\tsensor_values: val.sensor_values,\n\t\t\t};\n\t\t});\n\n\t\tsensorOptions.map((val: sensorOptionsElem) => {\n\t\t\tlet name = val.label.split('-')[0]\n\t\t\tif (name === 'ultrafine dust' || name === 'fine dust' || name === 'temperature' || name === 'humidity' || name === 'infrared' || name === 'illuminance' ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tstreetlampsensors: [...this.state.streetlampsensors, val],\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (name === 'ultrasound') {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttrashcansensors: [...this.state.trashcansensors, val],\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (name === 'soil moisture') {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttreesensors: [...this.state.treesensors, val],\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t\tconsole.log('streelamp: ' + this.state.streetlampsensors[0]);\n\t\tconsole.log('trashcan: ' + this.state.trashcansensors[0]);\n\t\tconsole.log('tree: ' + this.state.treesensors[0]);\n\n\t\t/*if (nodeKind !== null) {\n\t\t\tthis.setState({\n\t\t\t\tkind: nodeKind.value,\n\t\t\t\tkindValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tkind: nodeKind.value,\n\t\t\t\tkindValid: false,\n\t\t\t});\n\t\t}\n\t\tconsole.log(this.state.kind);*/\n\n\t\tif (nodeKind === 'streetlamp'){\n\t\t\tthis.setState({\n\t\t\t\tsensors: this.state.streetlampsensors,\n\t\t\t\tsensorValid: true,\n\t\t\t});\n\t\t\tconsole.log('streetlamp');\n\t\t}\n\t\tif (nodeKind === 'trashcan'){\n\t\t\tthis.setState({\n\t\t\t\tsensors: this.state.trashcansensors,\n\t\t\t\tsensorValid: true,\n\t\t\t});\n\t\t}\n\t\tif (nodeKind === 'arbor') {\n\t\t\tthis.setState({\n\t\t\t\tsensors: this.state.treesensors,\n\t\t\t\tsensorValid: false,\n\t\t\t});\n\t\t}\n\n\t\tconsole.log('selectedSensorlist: ' + this.state.sensors[0]);\n\t}\n\n\t// Handle LarLng change by pick lat, lng at map\n\thandleLarLngChange = (location: locationElem) => {\n\t\tthis.setState({\n\t\t\tlocation,\n\t\t});\n\t};\n\n\t// Handle selected sensor change by selecting sensors\n\thandleSensorsChange = (sensors: any) => {\n\t\t// sensor valid check : user should select more than a sensor\n\t\tif (sensors !== null || sensors !== []) {\n\t\t\tif (this.state.kind === 'streetlamp'){\n\t\t\t\tthis.setState({\n\t\t\t\t\tsensors: this.state.streetlampsensors,\n\t\t\t\t\tsensorValid: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (this.state.kind === 'trashcan'){\n\t\t\t\tthis.setState({\n\t\t\t\t\tsensors: this.state.trashcansensors,\n\t\t\t\t\tsensorValid: true,\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (this.state.kind === 'arbor') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsensors: this.state.treesensors,\n\t\t\t\t\tsensorValid: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t// Handle selected sink change by selecting sink\n\thandleSinkChange = (sink: any) => {\n\t\t// sink valid check : user should select sink\n\t\tif (sink !== null) {\n\t\t\tthis.setState({\n\t\t\t\tsink_id: sink.id,\n\t\t\t\tsinkValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsink_id: sink.id,\n\t\t\t\tsinkValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\t// Handle submit button click event\n\thandleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\te.preventDefault();\n\n\t\tvar url = NODE_URL;\n\t\tvar data = this.state;\n\t\tconsole.log(data.sensors[0]);\n\t\tvar sensor_id = data.sensors.map((val: sensorOptionsElem) => {\n\t\t\treturn { id: val.id };\n\t\t});\n\t\tvar name = this.state.kind + '-' + this.state.node_name;\n\n\t\t// Valid check (unvalid -> alert)\n\t\tif (!this.state.nameValid) {\n\t\t\talert('Please enter node name.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.kindValid) {\n\t\t\talert('Please select more than a node kind.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.sensorValid) {\n\t\t\talert('Please select more than a sensor.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.sinkValid) {\n\t\t\talert('Please enter sink.');\n\t\t\treturn;\n\t\t}\n\n\t\t// Check whether user really want to submit\n\t\tvar submitValid: boolean;\n\t\tsubmitValid = window.confirm('Are you sure to register this node?');\n\t\tif (!submitValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(\n\t\t\tJSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\tlat: data.location.lat,\n\t\t\t\tlng: data.location.lng,\n\t\t\t\tsensors: sensor_id,\n\t\t\t})\n\t\t);\n\n\t\tfetch(url, {\n\t\t\tmethod: 'POST', // or 'PUT'\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\tlat: data.location.lat,\n\t\t\t\tlng: data.location.lng,\n\t\t\t\tsink_id: data.sink_id,\n\t\t\t\tsensors: sensor_id,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((response) => console.log('Success:', JSON.stringify(response)))\n\t\t\t.catch((error) => console.error('Error:', error))\n\t\t\t.then(() => window.location.reload(false)); // nodeList will change so reload for reflecting change\n\t};\n\n\trender() {\n\t\tlet sensorOptions: Array<sensorOptionsElem>;\n\t\tsensorOptions = this.state.sensorList.map((val: sensorListElem) => {\n\t\t\treturn {\n\t\t\t\tlabel: val.name,\n\t\t\t\tvalue: val.name,\n\t\t\t\tid: val.id,\n\t\t\t\tsensor_values: val.sensor_values,\n\t\t\t};\n\t\t});\n\t\tlet sinkOptions: Array<sinkOptionsElem>;\n\t\tsinkOptions = this.state.sinkList.map((val: sinkListElem) => {\n\t\t\treturn { label: val.name, value: val.name, id: val.id };\n\t\t});\n\n\t\tlet nodeOptions: Array<nodeOptionsElem> = [\n\t\t\t{ label: 'streetlemp', value: 'streetlemp'}, \n\t\t\t{ label: 'arbor', value: 'arbor' }, \n\t\t\t{ label: 'trashcan', value: 'trashcan' }, \n\t\t];\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"modal fade\"\n\t\t\t\t\tid=\"register-node-modal\"\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\taria-labelledby=\"register-node-modal\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"modal-dialog  modal-lg\" role=\"document\">\n\t\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<h4 className=\"modal-title\" id=\"register-node-modal\">\n\t\t\t\t\t\t\t\t\tRegister node\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">Ã—</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Node name</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"node_name\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.node_name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>location</label>\n\t\t\t\t\t\t\t\t\t\t<LarLngPicker\n\t\t\t\t\t\t\t\t\t\t\thandleLarLngChange={this.handleLarLngChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select Node</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\toptions={nodeOptions}\n\t\t\t\t\t\t\t\t\t\t\tname=\"action\"\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleKindChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select sensors</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tisMulti\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"basic-multi-select\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"sensors\"\n\t\t\t\t\t\t\t\t\t\t\toptions={sensorOptions}\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.sensors}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSensorsChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>*/}\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select sink</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"basic-select\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"sink\"\n\t\t\t\t\t\t\t\t\t\t\toptions={sinkOptions}\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSinkChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success my-2 my-sm-0\" \n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: 'light' }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"reset\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RegisterNode;\n\n"]},"metadata":{},"sourceType":"module"}