{"ast":null,"code":"var _jsxFileName = \"/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/Register/RegisterSensor.tsx\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { SENSOR_URL } from '../../defineUrl'; // form : https://getbootstrap.com/docs/4.0/components/forms/?\n// add, delete input : https://codesandbox.io/s/00xq32n3pn?from-embed=&file=/src/index.js\n\n/* \nRegisterSensor\n- Show modal to register sensor\n*/\nclass RegisterSensor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sensor_values: [{\n        value_name: ''\n      }],\n      name: '',\n      selectedSensor: '',\n      nameValid: false,\n      valueValid: false\n    };\n\n    this.handleNameChange = e => {\n      // name valid check : user should enter sensor name\n      if (e.target.value.length > 0) {\n        this.setState({\n          name: e.target.value,\n          nameValid: true\n        });\n      } else {\n        this.setState({\n          name: e.target.value,\n          nameValid: false\n        });\n      }\n    };\n\n    this.handleSensorChange = e => {\n      this.setState({\n        selectedSensor: e.value\n      });\n    };\n\n    this.handleValueChange = idx => e => {\n      // Value list is updated dynamic. Its element can be added or removed freely.\n      // so find changing field by using received idx and change state.\n      const newsensor_values = this.state.sensor_values.map((value, sidx) => {\n        if (idx !== sidx) return value;\n        return { ...value,\n          value_name: e.target.value\n        };\n      }); // value list valid check : User should enter more than a value and each value input field should be filled\n\n      if (newsensor_values !== null && !newsensor_values.some(value => value.value_name === '') && // find empty field\n      newsensor_values[idx].value_name.length > 0) {\n        this.setState({\n          sensor_values: newsensor_values,\n          valueValid: true\n        });\n      } else {\n        this.setState({\n          sensor_values: newsensor_values,\n          valueValid: false\n        });\n      }\n    };\n\n    this.handleAddClick = () => {\n      // Add a value list elem\n      this.setState({\n        sensor_values: [...this.state.sensor_values, {\n          value_name: ''\n        }]\n      });\n    };\n\n    this.handleRemoveClick = idx => () => {\n      // Remove #idx value list elem which user picked\n      this.setState({\n        sensor_values: this.state.sensor_values.filter((s, sidx) => idx !== sidx)\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      var url = SENSOR_URL;\n      var data = this.state; // Valid check (unvalid -> alert)\n\n      if (!this.state.nameValid) {\n        alert('Please enter sensor name.');\n        return;\n      }\n\n      if (!this.state.valueValid) {\n        alert('Please enter value name.');\n        return;\n      } // Check whether user really want to submit\n\n\n      var submitValid;\n      submitValid = window.confirm('Are you sure to register this sensor?');\n\n      if (!submitValid) {\n        return;\n      }\n\n      fetch(url, {\n        method: 'POST',\n        // or 'PUT'\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(response => console.log('Success:', JSON.stringify(response))).catch(error => console.error('Error:', error)).then(() => window.location.reload(false));\n    };\n  }\n\n  render() {\n    let sensorOptions = [{\n      label: 'illuminance',\n      value: 'illuminance'\n    }, {\n      label: 'particulate matter',\n      value: 'particulate matter'\n    }, {\n      label: 'infrared',\n      value: 'infrared'\n    }, {\n      label: 'temperature and humidity',\n      value: 'temperature and humidity'\n    }, {\n      label: 'ultrasound',\n      value: 'ultrasound'\n    }, {\n      label: 'soil moisture',\n      value: 'soil moisture'\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"register-sensor-modal\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"register-sensor-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"modal-title\",\n      id: \"register-sensor-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"Register sensor\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 10\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, \"Sensor name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      placeholder: \"name\",\n      value: this.state.name,\n      onChange: this.handleNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"Select sensor\"), /*#__PURE__*/React.createElement(Select, {\n      options: sensorOptions,\n      name: \"action\",\n      classNamePrefix: \"select\",\n      onChange: this.handleSensorChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      onClick: this.handleSubmit,\n      style: {\n        background: 'pink'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 10\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-default\",\n      \"data-dismiss\": \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 10\n      }\n    }, \"Cancel\")))))));\n  }\n\n}\n\nexport default RegisterSensor;","map":{"version":3,"sources":["/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/Register/RegisterSensor.tsx"],"names":["React","Component","Select","SENSOR_URL","RegisterSensor","state","sensor_values","value_name","name","selectedSensor","nameValid","valueValid","handleNameChange","e","target","value","length","setState","handleSensorChange","handleValueChange","idx","newsensor_values","map","sidx","some","handleAddClick","handleRemoveClick","filter","s","handleSubmit","preventDefault","url","data","alert","submitValid","window","confirm","fetch","method","body","JSON","stringify","headers","then","res","json","response","console","log","catch","error","location","reload","render","sensorOptions","label","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport { SENSOR_URL } from '../../defineUrl';\n// form : https://getbootstrap.com/docs/4.0/components/forms/?\n// add, delete input : https://codesandbox.io/s/00xq32n3pn?from-embed=&file=/src/index.js\n\ninterface RegisterSensorState {\n\tsensor_values: Array<value_list_elem>;\n\tname: string;\n\tselectedSensor: string;                   // change\n\tnameValid: boolean;\n\tvalueValid: boolean;\n}\n\ninterface value_list_elem {\n\tvalue_name: string;\n}\n\ninterface sensorOptionsElem {\n\tlabel: string;\n\tvalue: string;\n}\n\n/* \nRegisterSensor\n- Show modal to register sensor\n*/\n\nclass RegisterSensor extends Component<{}, RegisterSensorState> {\n\tstate: RegisterSensorState = {\n\t\tsensor_values: [{ value_name: '' }],\n\t\tname: '',\n\t\tselectedSensor: '',\n\t\tnameValid: false,\n\t\tvalueValid: false,\n\t};\n\n\t// Handle node name change by typing\n\thandleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t// name valid check : user should enter sensor name\n\t\tif (e.target.value.length > 0) {\n\t\t\tthis.setState({\n\t\t\t\tname: e.target.value,\n\t\t\t\tnameValid: true,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tname: e.target.value,\n\t\t\t\tnameValid: false,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleSensorChange = (e: any) => {\n\t\tthis.setState({\n\t\t\tselectedSensor: e.value, \n\t\t})\n\t}\n\n\t// Handle value's name change by typing\n\thandleValueChange = (idx: number) => (\n\t\te: React.ChangeEvent<HTMLInputElement>\n\t) => {\n\t\t// Value list is updated dynamic. Its element can be added or removed freely.\n\t\t// so find changing field by using received idx and change state.\n\t\tconst newsensor_values = this.state.sensor_values.map(\n\t\t\t(value: value_list_elem, sidx: number) => {\n\t\t\t\tif (idx !== sidx) return value;\n\t\t\t\treturn { ...value, value_name: e.target.value };\n\t\t\t}\n\t\t);\n\n\t\t// value list valid check : User should enter more than a value and each value input field should be filled\n\t\tif (\n\t\t\tnewsensor_values !== null &&\n\t\t\t!newsensor_values.some((value) => value.value_name === '') && // find empty field\n\t\t\tnewsensor_values[idx].value_name.length > 0\n\t\t) {\n\t\t\tthis.setState({ sensor_values: newsensor_values, valueValid: true });\n\t\t} else {\n\t\t\tthis.setState({ sensor_values: newsensor_values, valueValid: false });\n\t\t}\n\t};\n\n\t// Handle click event of the Add button\n\thandleAddClick = () => {\n\t\t// Add a value list elem\n\t\tthis.setState({\n\t\t\tsensor_values: [...this.state.sensor_values, { value_name: '' }],\n\t\t});\n\t};\n\n\t// Handle click event of the Remove button\n\thandleRemoveClick = (idx: number) => () => {\n\t\t// Remove #idx value list elem which user picked\n\t\tthis.setState({\n\t\t\tsensor_values: this.state.sensor_values.filter(\n\t\t\t\t(s: any, sidx: number) => idx !== sidx\n\t\t\t),\n\t\t});\n\t};\n\n\t// Handle submit button click event\n\thandleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\te.preventDefault();\n\n\t\tvar url = SENSOR_URL;\n\t\tvar data = this.state;\n\n\t\t// Valid check (unvalid -> alert)\n\t\tif (!this.state.nameValid) {\n\t\t\talert('Please enter sensor name.');\n\t\t\treturn;\n\t\t}\n\t\tif (!this.state.valueValid) {\n\t\t\talert('Please enter value name.');\n\t\t\treturn;\n\t\t}\n\n\t\t// Check whether user really want to submit\n\t\tvar submitValid: boolean;\n\t\tsubmitValid = window.confirm('Are you sure to register this sensor?');\n\t\tif (!submitValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tfetch(url, {\n\t\t\tmethod: 'POST', // or 'PUT'\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((response) => console.log('Success:', JSON.stringify(response)))\n\t\t\t.catch((error) => console.error('Error:', error))\n\t\t\t.then(() => window.location.reload(false));\n\t};\n\n\trender() {\n\t\tlet sensorOptions: Array<sensorOptionsElem> = [\n\t\t\t{ label: 'illuminance', value: 'illuminance'}, { label: 'particulate matter', value: 'particulate matter' }, \n\t\t\t{ label: 'infrared', value: 'infrared' }, { label: 'temperature and humidity', value: 'temperature and humidity' }, \n\t\t\t{ label: 'ultrasound', value: 'ultrasound' }, { label: 'soil moisture', value: 'soil moisture' },\n\t\t];\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"modal fade\"\n\t\t\t\t\tid=\"register-sensor-modal\"\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\taria-labelledby=\"register-sensor-modal\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"modal-dialog\" role=\"document\">\n\t\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t\t<h4 className=\"modal-title\" id=\"register-sensor-modal\">\n\t\t\t\t\t\t\t\t\tRegister sensor\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">×</span>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Sensor name</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Select sensor</label>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\toptions={sensorOptions}\n\t\t\t\t\t\t\t\t\t\t\tname=\"action\"\n\t\t\t\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleSensorChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/* \n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Value name</label>\n\t\t\t\t\t\t\t\t\t\t{this.state.sensor_values.map(\n\t\t\t\t\t\t\t\t\t\t\t(value: value_list_elem, idx: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-group mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\">{idx}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"sensor_values\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Enter value name'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={value.value_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleValueChange(idx)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"button-addon2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleRemoveClick(idx)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ background: 'pink' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"bi bi-trash-fill\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleAddClick}\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: 'pink' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tAdd value\n\t\t\t\t\t\t\t\t\t</button> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\tstyle={{ background: 'pink' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-default\"\n\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default RegisterSensor;\n"]},"metadata":{},"sourceType":"module"}