{"ast":null,"code":"var _jsxFileName = \"/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/NodeManagement.tsx\";\nimport React, { Component } from 'react';\nimport RegisterNode from './Register/RegisterNode';\nimport NodeTable from './Table/NodeTable';\nimport { HEALTHCHECK_URL, SINK_URL } from '../defineUrl';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport NodeMap from './NodeMap';\nconst client = new W3CWebSocket(HEALTHCHECK_URL);\n\n/*\nNodeManagement\n- Manage node table, register node\n*/\nclass NodeManagement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sinkList: [],\n      nodeState: [],\n      showAllValid: true\n    };\n\n    this.handleAllClick = () => {\n      this.setState({\n        showAllValid: true\n      });\n    };\n\n    this.handleMapClick = () => {\n      this.setState({\n        showAllValid: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client for Health Check Connected');\n    };\n\n    client.onmessage = message => {\n      console.log(message);\n      this.setState({\n        nodeState: JSON.parse(message.data)\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getsinkList();\n  } // Get sink list from backend\n\n\n  getsinkList() {\n    var url = SINK_URL;\n    fetch(url).then(res => res.json()).then(data => this.setState({\n      sinkList: data\n    })).catch(error => console.error('Error:', error));\n  } // node state fetch해오는 코드 없음\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#register-node-modal\",\n      style: {\n        background: 'light'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    }, \"register node\"), /*#__PURE__*/React.createElement(RegisterNode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }, \"Node\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : don't know \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'lime'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : stable \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: '#32CD32'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : unstable \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : disconnect \")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }\n    }, \"Viewer type \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      style: {\n        background: 'light'\n      },\n      onClick: this.handleAllClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      style: {\n        background: 'light'\n      },\n      onClick: this.handleMapClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }\n    }, \"Map\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }\n    }), this.state.showAllValid ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, this.state.sinkList.map((sink, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '18pt',\n        fontWeight: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"Sink \", sink.id), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn dropdown-toggle\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": '#sink' + sink.id.toString(),\n      \"aria-controls\": sink.id.toString(),\n      style: {\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: 'sink' + sink.id.toString(),\n      className: \"collapse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NodeTable, {\n      sink_id: sink.id // 해당 싱크의 노드들을 가져오기 위해 sink_id 받음\n      ,\n      nodeState: this.state.nodeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 10\n      }\n    }))))) : /*#__PURE__*/React.createElement(NodeMap, {\n      nodeState: this.state.nodeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\n;\nexport default NodeManagement;","map":{"version":3,"sources":["/home/haneul/toiot_copy/toiot-1/ui/src/ManagementComponents/NodeManagement.tsx"],"names":["React","Component","RegisterNode","NodeTable","HEALTHCHECK_URL","SINK_URL","w3cwebsocket","W3CWebSocket","NodeMap","client","NodeManagement","state","sinkList","nodeState","showAllValid","handleAllClick","setState","handleMapClick","componentWillMount","onopen","console","log","onmessage","message","JSON","parse","data","componentDidMount","getsinkList","url","fetch","then","res","json","catch","error","render","float","background","color","map","sink","idx","fontSize","fontWeight","id","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport RegisterNode from './Register/RegisterNode';\nimport NodeTable from './Table/NodeTable';\nimport {\n\tsinkListElem,\n\tnodeHealthCheckElem,\n} from '../ElemInterface/ElementsInterface';\nimport { HEALTHCHECK_URL, SINK_URL } from '../defineUrl';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport NodeMap from './NodeMap';\n\nconst client = new W3CWebSocket(HEALTHCHECK_URL);\n\ninterface NodeManagementState {\n\tsinkList: Array<sinkListElem>;\n\tnodeState: Array<nodeHealthCheckElem>;\n\n\tshowAllValid: boolean;\n}\n/*\nNodeManagement\n- Manage node table, register node\n*/\n\nclass NodeManagement extends Component<{}, NodeManagementState> {\n\tstate: NodeManagementState = {\n\t\tsinkList: [],\n\t\tnodeState: [],\n\n\t\tshowAllValid: true,\n\t};\n\n\tcomponentWillMount() {\n\t\tclient.onopen = () => {\n\t \t\tconsole.log('WebSocket Client for Health Check Connected');\n\t \t};\n\t \tclient.onmessage = (message: any) => {\n\t\t\tconsole.log(message);\n\t \t\tthis.setState({\n\t \t\t\tnodeState: JSON.parse(message.data),\n\t\t\t});\n\t \t};\n\t }\n\n\tcomponentDidMount() {\n\t\tthis.getsinkList();\n\t}\n\n\t// Get sink list from backend\n\tgetsinkList() {\n\t\tvar url = SINK_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => this.setState({ sinkList: data }))\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\t// node state fetch해오는 코드 없음\n\n\thandleAllClick = () => {\n\t\tthis.setState({\n\t\t\tshowAllValid: true,\n\t\t});\n\t}\n\thandleMapClick = () => {\n\t\tthis.setState({\n\t\t\tshowAllValid: false,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={{ float: 'right' }}>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-outline-success my-2 my-sm-0\"\n\t\t\t\t\t\tdata-toggle=\"modal\"\n\t\t\t\t\t\tdata-target=\"#register-node-modal\"\n\t\t\t\t\t\tstyle={{ background: 'light' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tregister node\n\t\t\t\t\t</button>\n\t\t\t\t\t<RegisterNode></RegisterNode>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Node</h3>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div style={{ float: 'right' }}>\n\t\t\t\t\t\t<span style={{ color: 'gray' }}>● : don't know </span>\n\t\t\t\t\t\t<span style={{ color: 'lime' }}>● : stable </span>\n\t\t\t\t\t\t<span style={{ color: '#32CD32' }}>● : unstable </span>\n\t\t\t\t\t\t<span style={{ color: 'red' }}>● : disconnect </span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span >Viewer type </span>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-outline-success my-2 my-sm-0\"\n\t\t\t\t\t\tstyle={{ background: 'light' }}\n\t\t\t\t\t\tonClick={this.handleAllClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tAll\n\t\t\t\t\t</button>\n\t\t\t\t\t<span> </span>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-outline-success my-2 my-sm-0\"\n\t\t\t\t\t\tstyle={{ background: 'light' }}\n\t\t\t\t\t\tonClick={this.handleMapClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tMap\n\t\t\t\t\t</button>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t{(this.state.showAllValid)?(\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.state.sinkList.map((sink: sinkListElem, idx: number) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '18pt', fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t\tSink {sink.id}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn dropdown-toggle\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\t\t\t\tdata-target={'#sink' + sink.id.toString()}\n\t\t\t\t\t\t\t\t\taria-controls={sink.id.toString()}\n\t\t\t\t\t\t\t\t\tstyle={{ color: 'black' }}\n\t\t\t\t\t\t\t\t></button>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid={'sink' + sink.id.toString()}\n\t\t\t\t\t\t\t\t\tclassName=\"collapse\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<NodeTable\n\t\t\t\t\t\t\t\t\t\tsink_id={sink.id}                       // 해당 싱크의 노드들을 가져오기 위해 sink_id 받음\n\t\t\t\t\t\t\t\t\t\tnodeState={this.state.nodeState}\n\t\t\t\t\t\t\t\t\t></NodeTable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t):(\n\t\t\t\t\t\t<NodeMap nodeState={this.state.nodeState}></NodeMap>\n\t\t\t\t\t)}\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\n\nexport default NodeManagement;\n"]},"metadata":{},"sourceType":"module"}